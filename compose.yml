name: docker-servarr-seedbox

services:
    # +---------------------------------------------------------------------------+
    # | WARNING: This config may lead to copyright issues. Use at your own risk!  |
    # | Ensure compliance with copyright laws before proceeding.                  |
    # +---------------------------------------------------------------------------+
    
    # *****************************************************************************
    # docker-servarr-seedbox
    #
    # Author: Steve Theisen (steve@tyzen9.com)
    #         https://www.github.com/tyzen9
    #
    # If there is a service below you do not plan to use, then simply comment its
    # it's section out by placing a '#' symbol before each line of the ENTIRE 
    # section. 
    #
    # This Docker Stack expects a properly configured ".env" file.  Please make a 
    # copy of the "sample.env" file called ".env" and configure it properly for 
    # your before starting this stack.  See comments in "sample.env"
    #
    #          !! Use caution when making changes below the WARNING below !!
    #
    # *****************************************************************************
    
    # *****************************************************************************
    # pia-vpn
    #    This AWESOME PIA wireguard VPN is created and maintained by thrnz
    #    For details on this container, and the available options be sure to 
    #    check out: https://github.com/thrnz/docker-wireguard-pia
    #
    #    This VPN will secure ALL traffic for this stack, you can see this in 
    #    these configuration tags:
    #
    #        network_mode: "service:vpn"
    #        depends_on:
    #          - vpn
    #
    #   Action: This should be considered required, visit PIA to get started
    #           https://www.privateinternetaccess.com/buy-vpn-online
    # *****************************************************************************
    vpn:
        image: thrnz/docker-wireguard-pia:latest
        container_name: pia-vpn
        restart: always
        volumes:
            - pia-token:/pia
            - pia-portnumber:/pia-shared
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        environment:
            # The following env vars are required:
            - LOC=${PIA_LOC}
            - USER=${PIA_USERNAME}
            - PASS=${PIA_PASSWORD}
            # The rest are optional:
            - LOCAL_NETWORK=${LOCAL_NETWORK}
            - KEEPALIVE=${KEEPALIVE:-25}
            - PORT_FORWARDING=${PORT_FORWARDING:-1}
        sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
            # May as well disable ipv6. Should be blocked anyway.
            - net.ipv6.conf.default.disable_ipv6=1
            - net.ipv6.conf.all.disable_ipv6=1
            - net.ipv6.conf.lo.disable_ipv6=1
        # Since other services will use this network, we need to open the port for qbittorrent
        ports:
            - ${QBT_WEB_PORT:-8080}:8080
            - ${PROWLARR_WEB_PORT:-9696}:9696
            - ${SONARR_WEB_PORT:-8989}:8989
            - ${RADARR_WEB_PORT:-7878}:7878
            - ${READARR_WEB_PORT:-8787}:8787
            - "${FLARESOLVER_WEB_PORT:-8191}:8191"

        # The container has no recovery logic. Use a healthcheck to catch disconnects.
        healthcheck:
            test: ping -c 1 www.google.com || exit 1
            interval: 30s
            timeout: 10s
            retries: 3

    # *****************************************************************************
    # prowlarr
    #    Prowlarr is an indexer manager and proxy that helps integrate various 
    #    PVR (Personal Video Recorder) applications by managing both Torrent 
    #    Trackers and Usenet Indexers. It works suggested that this be used 
    #    with all Sonarr services to consolidate indexer configurations
    #
    #  Action: if you plan to use an *arr service, then you probably want
    #          Prowlarr so you can centralize all indexer configuration in
    #          one place.
    # *****************************************************************************
    prowlarr:
        image: lscr.io/linuxserver/prowlarr:latest
        container_name: prowlarr
        restart: always
        environment:
            - TZ=${TZ_ID}
            - PUID=${PUID:-1000}
            - PGID=${GUID:-1000}
        volumes:
            - prowlarr-config:/config
        network_mode: "service:vpn"
        depends_on:
            vpn:
              condition: service_healthy

    # *****************************************************************************
    # sonarr - TV show searching.
    # 
    #   Action: if you are not using this, then comment it out
    # *****************************************************************************
    sonarr:
        image: lscr.io/linuxserver/sonarr:latest
        container_name: sonarr
        restart: unless-stopped
        environment:
            - TZ=${TZ_ID}
            - PUID=${PUID:-1000}
            - PGID=${GUID:-1000}
        volumes:
            - sonarr-config:/config
            - ${TV_VOLUME}:/tv
            - ${DOWNLOADS_VOLUME}:/downloads
        network_mode: "service:vpn"
        depends_on:
            - vpn
            - prowlarr

    # *****************************************************************************
    # sonarr - Movie searching.
    # 
    #   Action: if you are not using this, then comment it out
    # *****************************************************************************
    radarr:
        image: lscr.io/linuxserver/radarr:latest
        container_name: radarr
        restart: unless-stopped
        environment:
            - TZ=${TZ_ID}
            - PUID=${PUID:-1000}
            - PGID=${GUID:-1000}
        volumes:
            - radarr-config:/config
            - ${MOVIE_VOLUME}:/movies
            - ${DOWNLOADS_VOLUME}:/downloads
        network_mode: "service:vpn"
        depends_on:
            - vpn
            - prowlarr

    # *****************************************************************************
    # readarr - Audiobook and eBook searching.  
    #
    #   Warning: Currently readarr has no active devs, and the servarr team 
    #            would like someone to take over readarr development. It still
    #            works, but not as well as it once did.
    # 
    #   Action: if you are not using this, then comment it out
    # *****************************************************************************
    readarr:
        # Readarr is currently releasing from their "develop" branch
        image: lscr.io/linuxserver/readarr:develop
        container_name: readarr
        restart: unless-stopped
        environment:
            - TZ=${TZ_ID}
            - PUID=${PUID:-1000}
            - PGID=${GUID:-1000}
        volumes:
            - readarr-config:/config
            - ${BOOKS_VOLUME}:/books
            - ${DOWNLOADS_VOLUME}:/downloads
        network_mode: "service:vpn"
        depends_on:
            - vpn
            - prowlarr
            


    # *****************************************************************************
    # qbittorrent
    #    qBittorrent is based on the Qt toolkit and libtorrent-rasterbar 
    #    library. 
    #
    #   See: https://docs.linuxserver.io/images/docker-qbittorrent/
    #
    #   Action: If you will ONLY be using a cloud based seedbox then you can
    #           comment this out. However, local seedboxes can be nice for
    #           occasional public tracker usage and can be configured separately
    #           from other seedboxes in *arr apps
    #
    # *****************************************************************************
    qbittorrent:
        image: lscr.io/linuxserver/qbittorrent:latest
        container_name: qbittorrent
        restart: always
        environment:
            - TZ=${TZ_ID}
            - PUID=${PUID:-1000}
            - PGID=${GUID:-1000}
            - WEBUI_PORT=${QBT_WEB_PORT:-8080}
        volumes:
            - qbittorrent-config:/config
            - ${DOWNLOADS_VOLUME}:/downloads
        network_mode: "service:vpn"
        depends_on:
            vpn:
              condition: service_healthy

    # *****************************************************************************
    # qbittorrent-port-helper (Steve Theisen)
    #    Looks for a file named "port.dat", reads the port number in that
    #    file and uses that to update the Listening Port number used by
    #    qBittorrent. The PIA image above is configured to drop the "port.dat"
    #    file into the pia-portnumber volume.
    #
    #   See: https://github.com/tyzen9/docker-qbittorrent-port-helper 
    #
    #   Action: If you are not using qBittorrent locally you can comment this
    #           out. If you are not using PIA, then another VPN client will 
    #           need to be configured to drop its port-forward number into a
    #           "port.dat" in a shared volume this can use
    # *****************************************************************************
    qbittorrent-port-helper:
        image: tyzen9/qbittorrent-port-helper:latest
        container_name: qbittorrent-port-helper
        restart: always
        volumes:
            - pia-portnumber:/vpn-data
        environment:
            - TZ=${TZ_ID}
            - QBITTORRENT_USERNAME=${QBITTORRENT_USERNAME}
            - QBITTORRENT_PASSWORD=${QBITTORRENT_PASSWORD}
            - QBITTORRENT_PORT_NUMBER=${QBITTORRENT_PORT_NUMBER:-8080}
            - QBITTORRENT_URL=${QBITTORRENT_URL}
        network_mode: "service:vpn"
        depends_on:
            - qbittorrent

    # *******************************************************************
    # Stripparr  (Mike Nye)
    #    Removes unwanted metadata from downloaded media, and is created 
    #    and maintained by Mike Nye and other contributors
    #
    #   See:  https://github.com/mikenye/docker-striparr
    #
    #   Action: You will need to configure Sonarr/Radarr to use Striparr:
    #           https://github.com/mikenye/docker-striparr#sonarrradarr-configuration 
    # *******************************************************************
    striparr:
        image: mikenye/striparr:latest
        container_name: striparr
        restart: always
        environment:
            - TZ=${TZ_ID}
            - PUID=${PUID:-1000}
            - PGID=${GUID:-1000}
        volumes:
            - ${MOVIE_VOLUME}:/movies
            - ${TV_VOLUME}:/tv
        network_mode: "service:vpn"

    # *******************************************************************
    # flaresolverr 
    #    FlareSolverr is a proxy server to bypass Cloudflare and 
    #    DDoS-GUARD protection. Depending on the indexers you use, you 
    #    may need to configure this.  
    #
    #   See: https://github.com/FlareSolverr/FlareSolverr
    #
    #   Action: Configure the indexers in Prowlarr as shown in this link:
    #           https://trash-guides.info/Prowlarr/prowlarr-setup-flaresolverr/ 
    # *******************************************************************
    flaresolverr:
        image: ghcr.io/flaresolverr/flaresolverr:latest
        container_name: flaresolverr
        restart: always
        environment:
            - TZ=${TZ_ID}
            - LOG_LEVEL=${LOG_LEVEL:-info}
            - LOG_HTML=${LOG_HTML:-false}
            - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
        network_mode: "service:vpn"


    # *****************************************************************************
    # lftp-mirror (Steve Theisen)
    #    This is container is used to pull downloaded files from a remote seedbox
    #    using lftp.  This will mirror the content between the two directories.
    #
    #  See: https://github.com/tyzen9/docker-lftp-mirror
    #
    #  Action: If you do not use a remote seedbox, you can comment this service out
    # *****************************************************************************
    lftp-mirror:
        image: tyzen9/lftp-mirror:latest
        container_name: lftp-mirror
        environment:
            - TZ_ID=${TZ_ID}
            - SOURCE_HOSTNAME=${SOURCE_HOSTNAME}
            - SSH_USERNAME=${SSH_USERNAME}
            - SSH_PASSWORD=${SSH_PASSWORD}
            - SOURCE_DIR=${SOURCE_DIR}
            - SOURCE_EXCLUDES=${SOURCE_EXCLUDES}
        volumes:
            - ${DOWNLOADS_VOLUME}:/downloads
        network_mode: "service:vpn"
        depends_on:
            vpn:
              condition: service_healthy


    # *****************************************************************************
    # mam-ip-helper (Steve Theisen)
    #    This is a simple container that pings myanonamouse.net once an hour
    #    to update the VPN ipaddress being used for downloading. This is 
    #    important to keep connectivity for seeding ratios etc.  
    #
    #  See: https://github.com/tyzen9/docker-myanonamouse-ip-helper
    #
    #  Action: If you do not use myanonamouse.net, you can comment this service
    #          out, or just neglect to provide a MAM_ID in the environment, 
    #          and the container will simply exit when it starts
    # *****************************************************************************
    # mam-ip-helper:
    #     image: tyzen9/myanonamouse-ip-helper:latest
    #     container_name: mam-ip-helper
    #     environment:
    #         - MAM_ID=${MAM_ID}
    #     network_mode: "service:vpn"
    #     depends_on:
    #         - vpn
    

volumes:
    pia-token:
    pia-portnumber:
    prowlarr-config:
    readarr-config:
    radarr-config:
    sonarr-config:
    qbittorrent-config: